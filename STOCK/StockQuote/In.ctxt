#BlueJ class context
comment0.params=
comment0.target=In()
comment0.text=\r\n\ Create\ an\ input\ stream\ for\ standard\ input.\r\n
comment1.params=socket
comment1.target=In(java.net.Socket)
comment1.text=\r\n\ Create\ an\ input\ stream\ from\ a\ socket.\r\n
comment10.params=
comment10.target=java.lang.String\ readAll()
comment10.text=\r\n\ Read\ and\ return\ the\ remainder\ of\ the\ input\ as\ a\ string.\r\n
comment11.params=
comment11.target=java.lang.String\ readString()
comment11.text=\r\n\ Return\ the\ next\ string\ from\ the\ input\ stream.\r\n
comment12.params=
comment12.target=int\ readInt()
comment12.text=\r\n\ Return\ the\ next\ int\ from\ the\ input\ stream.\r\n
comment13.params=
comment13.target=double\ readDouble()
comment13.text=\r\n\ Return\ the\ next\ double\ from\ the\ input\ stream.\r\n
comment14.params=
comment14.target=double\ readFloat()
comment14.text=\r\n\ Return\ the\ next\ float\ from\ the\ input\ stream.\r\n
comment15.params=
comment15.target=long\ readLong()
comment15.text=\r\n\ Return\ the\ next\ long\ from\ the\ input\ stream.\r\n
comment16.params=
comment16.target=byte\ readByte()
comment16.text=\r\n\ Return\ the\ next\ byte\ from\ the\ input\ stream.\r\n
comment17.params=
comment17.target=boolean\ readBoolean()
comment17.text=\r\n\ Return\ the\ next\ boolean\ from\ the\ input\ stream,\ allowing\ "true"\ or\ "1"\r\n\ for\ true\ and\ "false"\ or\ "0"\ for\ false.\r\n
comment18.params=filename
comment18.target=int[]\ readInts(java.lang.String)
comment18.text=\r\n\ Read\ ints\ from\ file\r\n
comment19.params=filename
comment19.target=double[]\ readDoubles(java.lang.String)
comment19.text=\r\n\ Read\ doubles\ from\ file\r\n
comment2.params=url
comment2.target=In(java.net.URL)
comment2.text=\r\n\ Create\ an\ input\ stream\ from\ a\ URL.\r\n
comment20.params=filename
comment20.target=java.lang.String[]\ readStrings(java.lang.String)
comment20.text=\r\n\ Read\ strings\ from\ a\ file\r\n
comment21.params=
comment21.target=int[]\ readInts()
comment21.text=\r\n\ Read\ ints\ from\ standard\ input\r\n
comment22.params=
comment22.target=double[]\ readDoubles()
comment22.text=\r\n\ Read\ doubles\ from\ standard\ input\r\n
comment23.params=
comment23.target=java.lang.String[]\ readStrings()
comment23.text=\r\n\ Read\ strings\ from\ standard\ input\r\n
comment24.params=
comment24.target=void\ close()
comment24.text=\r\n\ Close\ the\ input\ stream.\r\n
comment25.params=args
comment25.target=void\ main(java.lang.String[])
comment25.text=\r\n\ Test\ client.\r\n
comment3.params=file
comment3.target=In(java.io.File)
comment3.text=\r\n\ Create\ an\ input\ stream\ from\ a\ file.\r\n
comment4.params=s
comment4.target=In(java.lang.String)
comment4.text=\r\n\ Create\ an\ input\ stream\ from\ a\ filename\ or\ web\ page\ name.\r\n
comment5.params=
comment5.target=boolean\ exists()
comment5.text=\r\n\ Does\ the\ input\ stream\ exist?\r\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\r\n\ Is\ the\ input\ stream\ empty?\r\n
comment7.params=
comment7.target=boolean\ hasNextLine()
comment7.text=\r\n\ Does\ the\ input\ stream\ have\ a\ next\ line?\r\n
comment8.params=
comment8.target=java.lang.String\ readLine()
comment8.text=\r\n\ Read\ and\ return\ the\ next\ line.\r\n
comment9.params=
comment9.target=char\ readChar()
comment9.text=\r\n\ Read\ and\ return\ the\ next\ character.\r\n
numComments=26
